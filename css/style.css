/*------------------------------------*\
    #GENERAL-STYLES
\*------------------------------------*/

body {
  background: #333;
  box-shadow: inset 0 0 100px rgba(0,0,0,.5);
  color: #fff;
}

hr {
  height: 1px;
}



/*------------------------------------*\
    #HELPER-STYLES
\*------------------------------------*/

.header {
  padding: 1px;
  margin-top: -2px;
  border-bottom-left-radius: 3px;
  border-bottom-right-radius: 3px;
  background: url("../images/brushed_metal.jpg") no-repeat right bottom; /*  www.myfreetextures.com  */
}

.section {
  padding: 0 10px;
}

.super-title {
  margin: 8px 0 12px;
  letter-spacing: 2px;
  text-shadow: hsla(0,0%,40%,.5) 0 -1px 0, hsla(0,0%,100%,.6) 0 2px 1px;
  color: #000;
}

.sub-title {
  /* #TODO: */
}

.primary-heading,
.sub-heading {
  color: #fafafa;
}

.sub-heading {
  margin-top: 5px;
}


.social-media-box {
  padding-left: 10px;
  font-size: 36px;
}

.social-media-stacked {
  /* #TODO: */
}

.social-media-link {
  color: #fff;
}
.social-media-link:hover {
  color: #ddd;
}

.alert-box {
  display: none;
  width: 505px;
  height: 83px;
}

.alert-positive {
  background: rgba(0, 255, 0, .6);
}

.alert-negative {
  background: rgba(255, 0, 0, .6);
}


.table-box {
  padding: 0 10%;
}

.table-dark tbody {
  background: rgba(0, 0, 0, .05);
}

.table-dark tbody tr:hover {
  background: rgba(255, 255, 255, .1);
  text-shadow: none;
}


.inline-box {
  display: inline-block;
}

.hidden {
  display: none;
}

.hover-low {
  box-shadow: 0 0 2px rgba(0,0,0,.12),0 2px 4px rgba(0,0,0,.24); /* lower hover */
}

.hover-high {
  box-shadow: 0 0 4px rgba(0,0,0,.14),0 4px 8px rgba(0,0,0,.28); /* high hover */
}

/*------------------------------------*\
    #GAME-STYLES
\*------------------------------------*/

.gm-score-box {
  height: 110px;
  width: 180px;
  margin: 0 10px;
  padding: 14px;
  background: rgba(0, 0, 0, .05);
  border: 1px solid #aaa;
  font-size: 52px;
  letter-spacing: 2px;
  border-radius: 3px;
}

.gm-alert-box {
  position: absolute;
  margin: 50px 0 0;
}

.gm-icon-box {
  position: absolute;
  bottom: 30px;
  padding-left: 10px;
  font-size: 56px;
}

.gm-heart {
  margin-left: -10px;
  color: rgba(255, 0, 0, .8);
}




/*------------------------------------*\
    #MODAL-STYLES
\*------------------------------------*/

.modal {
  color: #333;
}

.modal-sub-heading {
  /* #TODO: */
}

.modal-sub-heading:first-child {
  margin-top: 0;
}





/*------------------------------------*\
    #FORM-STYLES
\*------------------------------------*/

/* Override bootstrap class*/
.form-group {
  margin-bottom: 10px;
}

.form-title {
  margin: 10px 0 11px;
}

.gm-form-box {
  position: absolute;
  width: 505px;
}

.gm-form-frame {
  margin: 150px 65px 0;
  padding: 10px 20px;
  background: #fff;
  border-radius: 5px;
  color: #333;
}





/*------------------------------------*\
    #SPECIAL-STYLES
\*------------------------------------*/

.metal {
  font: bold 6em/2em "Helvetica Neue", Arial, Helvetica, Geneva, sans-serif;
  text-align: center;
  color: hsla(0,0%,20%,1);
  text-shadow: hsla(0,0%,40%,.5) 0 -1px 0, hsla(0,0%,100%,.6) 0 2px 1px;
  
  background-color: hsl(0,0%,90%);
}
.linear {
  font-size: 4em;
  height: 80px;
  background-image: -webkit-repeating-linear-gradient(left, hsla(0,0%,100%,0) 0%, hsla(0,0%,100%,0)   6%, hsla(0,0%,100%, .1) 7.5%),
    -webkit-repeating-linear-gradient(left, hsla(0,0%,  0%,0) 0%, hsla(0,0%,  0%,0)   4%, hsla(0,0%,  0%,.03) 4.5%),
    -webkit-repeating-linear-gradient(left, hsla(0,0%,100%,0) 0%, hsla(0,0%,100%,0) 1.2%, hsla(0,0%,100%,.15) 2.2%),
    
    linear-gradient(180deg, hsl(0,0%,78%)  0%, 
    hsl(0,0%,90%) 47%, 
    hsl(0,0%,78%) 53%,
    hsl(0,0%,70%)100%);
}

/*
  #TODO: 
  Factor out of alert-box: display none and background;
  Factor table styles
  Factor styles
  Factor UI Manip to app.js
  AJAX.js should only be AJAX
  SECTION class


*/

/*
General Rules

Your selectors are fundamental to writing good CSS. To very briefly sum up the above sections:

Select what you want explicitly, rather than relying on circumstance or coincidence. Good Selector Intent will rein in the reach and leak of your styles.
Write selectors for reusability, so that you can work more efficiently and reduce waste and repetition.
Do not nest selectors unnecessarily, because this will increase specificity and affect where else you can use your styles.
Do not qualify selectors unnecessarily, as this will impact the number of different elements you can apply styles to.
Keep selectors as short as possible, in order to keep specificity down and performance up.
Focussing on these points will keep your selectors a lot more sane and easy to work with on changing and long-running projects.
*/

/*
A good naming convention will tell you and your team

what type of thing a class does;
where a class can be used;
what (else) a class might be related to.
*/


/**
 * Text-level errors.
 */
.error-text {
    color: red;
    font-weight: bold;
}

/**
 * Elements that contain errors.
 */
.error-box {
    padding: 10px;
    border: 1px solid;
}